<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Christos Perivolaropoulos - Chris Perivolaropoulos</title><link>https://fakedrake.github.io/</link><description>Hacking my way out of the existential deadlock</description><lastBuildDate>Sun, 18 Sep 2016 11:59:00 +0100</lastBuildDate><item><title>Subclassing function types in python</title><link>https://fakedrake.github.io/subclassing-function-types.html</link><description>&lt;p&gt;The way callables work in python can be a bit strange.  You have methods that take an argument &lt;code&gt;self&lt;/code&gt; but only when called from an object and classmethods and static methods etc. Let's take a more in-depth look at how cpython handles all this&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Perivolaropoulos</dc:creator><pubDate>Sun, 18 Sep 2016 11:59:00 +0100</pubDate><guid isPermaLink="false">tag:fakedrake.github.io,2016-09-18:/subclassing-function-types.html</guid><category>python</category><category>python</category></item><item><title>Teaching emacs to copy utf-8 on Mac OS X</title><link>https://fakedrake.github.io/teaching-emacs-to-copy-utf-8-on-mac-os-x.html</link><description>&lt;p&gt;Mac OS X comes with a command line tool for maniplating the clipboard
called &lt;code&gt;pbcopy&lt;/code&gt;. It's usage is simple: you throw stuff in it's stdin
and that stuff is copied to the clipboard. This way we can teach emacs
to copy stuff to the clipboard with this function&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;defun&lt;/span&gt; &lt;span class="nv"&gt;paste-to-osx â€¦&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Perivolaropoulos</dc:creator><pubDate>Thu, 12 May 2016 16:48:00 +0100</pubDate><guid isPermaLink="false">tag:fakedrake.github.io,2016-05-12:/teaching-emacs-to-copy-utf-8-on-mac-os-x.html</guid><category>emacs</category><category>emacs</category><category>macosx</category></item><item><title>Streaming Data through HTTP with Haskell</title><link>https://fakedrake.github.io/streaming-data-through-http-with-haskell.html</link><description>&lt;p&gt;Download and process large files on the fly with haskell&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Perivolaropoulos</dc:creator><pubDate>Sat, 30 Apr 2016 03:33:00 +0100</pubDate><guid isPermaLink="false">tag:fakedrake.github.io,2016-04-30:/streaming-data-through-http-with-haskell.html</guid><category>misc</category></item><item><title>Limiting simultaneous threads in Haskell</title><link>https://fakedrake.github.io/limiting-parallel-thread-in-haskell.html</link><description>&lt;p&gt;A simple way to lock the number of parallel threads with MVar.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Perivolaropoulos</dc:creator><pubDate>Fri, 29 Apr 2016 02:23:00 +0100</pubDate><guid isPermaLink="false">tag:fakedrake.github.io,2016-04-29:/limiting-parallel-thread-in-haskell.html</guid><category>misc</category></item><item><title>Ethernet deadlocks and forking the kernel</title><link>https://fakedrake.github.io/ethernet-deadlocks-and-forking-the-kernel.html</link><description>&lt;p&gt;A case study of fixing an irq deadlock in the linux kernel.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Perivolaropoulos</dc:creator><pubDate>Wed, 16 Jul 2014 18:25:00 +0100</pubDate><guid isPermaLink="false">tag:fakedrake.github.io,2014-07-16:/ethernet-deadlocks-and-forking-the-kernel.html</guid><category>kernel</category><category>drivers</category><category>irq</category><category>linux</category><category>kernel</category></item><item><title>Programmatically add search engines to firefox</title><link>https://fakedrake.github.io/programmatically-add-search-engines-to-firefox.html</link><description>&lt;p&gt;What we are doing here is adding a search engine to firefox like real men ie programmatically. This is nice because you can then write scripts to do interesting stuff with them.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Perivolaropoulos</dc:creator><pubDate>Sat, 07 Jun 2014 15:21:00 +0100</pubDate><guid isPermaLink="false">tag:fakedrake.github.io,2014-06-07:/programmatically-add-search-engines-to-firefox.html</guid><category>firefox</category><category>firefox</category><category>javascript</category></item><item><title>Gdb signals</title><link>https://fakedrake.github.io/gdb-signals.html</link><description>&lt;p&gt;Signaling from and to a process through GDB is much easier than one might expect.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Perivolaropoulos</dc:creator><pubDate>Tue, 06 May 2014 16:36:00 +0100</pubDate><guid isPermaLink="false">tag:fakedrake.github.io,2014-05-06:/gdb-signals.html</guid><category>GDB</category><category>GDB</category><category>C/C++</category><category>signals</category></item><item><title>Dealing with enormous ramdisks and Qemu</title><link>https://fakedrake.github.io/dealing-with-enormous-ramdisks-and-qemu.html</link><description>&lt;p&gt;There are times when you want to have everything on RAM. There are times when everything is more than 500M. And then there are times when you want both. That's when everything goes to hell.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Perivolaropoulos</dc:creator><pubDate>Mon, 31 Mar 2014 22:30:00 +0100</pubDate><guid isPermaLink="false">tag:fakedrake.github.io,2014-03-31:/dealing-with-enormous-ramdisks-and-qemu.html</guid><category>kernel</category><category>kernel</category><category>qemu</category></item><item><title>When printks are too many</title><link>https://fakedrake.github.io/when-printks-are-too-many.html</link><description>&lt;p&gt;Clean kernel source from debugging printks with git&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Chris Perivolaropoulos</dc:creator><pubDate>Fri, 28 Mar 2014 20:45:00 +0000</pubDate><guid isPermaLink="false">tag:fakedrake.github.io,2014-03-28:/when-printks-are-too-many.html</guid><category>kernel</category><category>git</category><category>kernel</category><category>debugging</category></item></channel></rss>